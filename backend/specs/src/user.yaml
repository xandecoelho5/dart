components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
          default: user
          enum:
            - "dev"
            - "admin"
            - "manager"
    UserCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string

  userCrud:
    get:
      tags:
        - "user"
      summary: Get all users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '../swagger.yaml#/components/schemas/BackendException'
    post:
      tags:
        - "user"
      summary: Create new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '../swagger.yaml#/components/schemas/BackendException'
    put:
      tags:
        - "user"
      summary: Update a user
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '../swagger.yaml#/components/schemas/BackendException'
  getOneOrDelete:
    get:
      tags:
        - "user"
      summary: Get user by id
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '../swagger.yaml#/components/schemas/BackendException'
    delete:
      tags:
        - "user"
      summary: Delete user by id
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '../swagger.yaml#/components/schemas/BackendException'
